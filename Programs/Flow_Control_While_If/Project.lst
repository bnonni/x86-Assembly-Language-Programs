Microsoft (R) Macro Assembler Version 14.16.27027.1	    04/19/19 15:31:34
Nonni1v1.asm						     Page 1 - 1


				; Student: Bryan Nonni
				; Class: CSC3210
				; Assignment#: 6-1v1
				; Description: Write an assembly program to find the smallest element by searching an array
				; int array[] = {23, 12, 3, -4, -10, 35, 11, 8, 18}
				; int index = 0 ;
				; int min = ary[0];
				; int arraySize = sizeof array / sizeof min
				; while (index < arraySize){
				; if (ary[index] < min)
				; min = ary[index]; 
				; }
				; Use cmp instruction and the appropriate jump instruction (signed or unsigned) to translate the if and while statements
				; Use $ operator (see chapter 3) to calculate the size of the array, and inc instruction to increment the index of the array
				; Run your program using the debugger to verify your answers (do this too for questions 2 and 3)
				  
				.386
				.model flat,stdcall
				.stack 4096
				ExitProcess proto,dwExitCode:dword

 00000000			.data 
 00000000 17 0C 03 FC F6		array SBYTE 23, 12, 3, -4, -10, 35, 11, 8, 18	; Decalre array with values
	   23 0B 08 12
 00000009 = 00000009			arraySize = ($ - array)							; Declare arraySize as constant
 00000009 00000000			index DWORD 0									; Declare index as 0
 0000000D 00				min SBYTE ?									; Declare min value as array[0]
					
 00000000			.code
 00000000			main proc
 00000000  8B 35 00000009 R		mov esi, index				; Move index value to esi for indexed array access
 00000006  B9 00000009			mov ecx, arraySize			; Move arraySize to ecx to use as a counter
 0000000B  8A 9E 00000000 R		mov bl, array[esi] 
 00000011  88 1D 0000000D R		mov min, bl
 00000017			while_loop:
 00000017  3B F1			cmp esi, ecx
 00000019  7D 20			jge end_while
 0000001B  3A 1D 0000000D R		cmp bl, min
 00000021  7C 09			jl if_condition
 00000023  46				inc esi
 00000024  8A 9E 00000000 R		mov bl, array[esi]
 0000002A  EB EB			jmp while_loop

 0000002C			if_condition:
 0000002C  88 1D 0000000D R		mov min, bl
 00000032  46				inc esi
 00000033  8A 9E 00000000 R		mov bl, array[esi]
 00000039  EB DC			jmp while_loop

 0000003B			end_while:

					invoke ExitProcess,0
 0000003B  6A 00	   *	    push   +000000000h
 0000003D  E8 00000000 E   *	    call   ExitProcess
 00000042			main endp
				end main
Microsoft (R) Macro Assembler Version 14.16.27027.1	    04/19/19 15:31:34
Nonni1v1.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000000E DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000042 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000042 Public STDCALL
  while_loop . . . . . . . . . .	L Near	 00000017 _TEXT	
  if_condition . . . . . . . . .	L Near	 0000002C _TEXT	
  end_while  . . . . . . . . . .	L Near	 0000003B _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
arraySize  . . . . . . . . . . .	Number	 00000009h   
array  . . . . . . . . . . . . .	Byte	 00000000 _DATA	
index  . . . . . . . . . . . . .	DWord	 00000009 _DATA	
min  . . . . . . . . . . . . . .	Byte	 0000000D _DATA	

	   0 Warnings
	   0 Errors
