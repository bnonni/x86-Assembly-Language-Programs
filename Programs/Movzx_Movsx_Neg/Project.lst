Microsoft (R) Macro Assembler Version 14.16.27026.1	    03/08/19 20:22:48
Nonni1.asm						     Page 1 - 1


				; Student: Bryan Nonni
				; Class: CSC3210
				; Assignment#: 4-1
				; Description:  EAX = (-val1 + val2) – 6 + val3
				; Initialize val1 with 4, val2 with 20, and val3 with 2.
				; You are only allowed to use 32-bit registers to hold intermediate results, whenever needed.
				; Use movzx, movsx, or neg instructions whenever needed.
				; Use the debugger to verify your answer
				; Assume that val1, val2, and val3 are 8-bit integer variables.


				.386
				.model flat,stdcall
				.stack 4096
				ExitProcess proto,dwExitCode:dword
 00000000			.data 
 00000000 04				val1 BYTE 4
 00000001 14				val2 BYTE 20
 00000002 02				val3 BYTE 2

 00000000			.code
 00000000			main proc
					
 00000000  A0 00000000 R		mov al, val1
 00000005  F6 D8			neg al
 00000007  8A 1D 00000001 R		mov bl, val2
 0000000D  02 C3			add al, bl
 0000000F  2C 06			sub al, 6
 00000011  02 05 00000002 R		add al, val3
 00000017  0F BE C0			movsx eax, al 



					invoke ExitProcess,0
 0000001A  6A 00	   *	    push   +000000000h
 0000001C  E8 00000000 E   *	    call   ExitProcess

 00000021			main endp
				end main
Microsoft (R) Macro Assembler Version 14.16.27026.1	    03/08/19 20:22:48
Nonni1.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000003 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000021 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000021 Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
val1 . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
val2 . . . . . . . . . . . . . .	Byte	 00000001 _DATA	
val3 . . . . . . . . . . . . . .	Byte	 00000002 _DATA	

	   0 Warnings
	   0 Errors
